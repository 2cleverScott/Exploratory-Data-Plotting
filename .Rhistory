test <- read.csv("~/Documents/personal/projects/DataScienceProjects/kaggle/BikeSharing/test.csv")
View(test)
plot(test$datetime,test$temp)
load("~/Documents/personal/projects/DataScienceProjects/kaggle/BikeSharing/train.csv")
View(incident)
2+2
installed.packages("swirl")
library("swirl")
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("class", "foreign", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial"))
library(swirl)
swirl()
bye()
install.packages("kernlab")
install.packages("rpart")
x <-c(1,3,5)
y <-c(3,2,10)
rbind(x,y)
d<- $L
d<- 4L
typeof(d)
a<- c(4,"a", TRUE)
typeof(a)
l <- list(2,"a","b", TRUE)
l[[2]]
x <- c(17,14,4,5,13,12,10)
w <- x
w
w[x>=10]<-4
w
x <- 1:4
y<-2
x+y
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
hw1_data
juicy <- hw1_data[47,]
juicy
table(hw1_data$Ozone == "NA")
tol <- table(hw1_data$Ozone == "NA")
View(tol)
hw1_data$Ozone == "NA"
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
tol <- table(hw1_data$Ozone == "NA")
bye()
tol <- which(hw1_data$Ozone == "NA")
tol
tol <- hw1_data[!is.na(hw1_data$Ozone == "NA"),]
tol
summary(tol)
tolOz < tol[tol$Ozone > 31, ]
tolOz <- tol[tol$Ozone > 31, ]
tolTemp <- tolOz[tolOz$Temp > 90, ]
tolTemp
Summary(tolTemp)
summary(tolTemp)
tolMonth <- tol[tol$Month==6,]
summary(tolMonth)
tolMonth
tolMonth <- hw1_data[hw1_data$Month==6,]
summary(tolMonth)
tolMay <- hw1_data[hw1_data$Month==5,]
max(tolMay$Ozone)
tol <- hw1_data[!is.na(hw1_data$Ozone == "NA"),]
tolMay <- tol[tol$Month==5,]
max(tolMay$Ozone)
x <- 1:4
y<-2
x+y
l <- list(2,"a","b", TRUE)
l[[]]
l[[1]]
juicy <- hw1_data[47,]
juicy
max(tolMay$Ozone)
summary(tolMonth)
tolMonth <- hw1_data[hw1_data$Month==6,]
summary(tolMonth)
Summary(tolTemp)
summary(tolTemp)
install.packages("mgcv")
install.packages("RMySQL")
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ls()
rm(list=ls())
swirl()
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
here <- dbConnect(MySQL(user="root",host="localhost"))
here <- dbConnect(MySQL(),(user="root",host="localhost"))
here <- dbConnect(MySQL(),user="root",host="localhost")
here <- dbConnect(MySQL(),user="root",host="127.0.0.1")
here <- dbConnect(MySQL(),user="sqlrpt",host="127.0.0.1")
here <- dbConnect(MySQL(),user="sqlrpt",host="127.0.0.1")
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1")
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1", db="northwind")
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1", db="northwind")
allT <- dbListTables()
allT <- dbListTables(northwind)
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1", dbname="northwind")
allT <- dbListTables(northwind)
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1")
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1", dbname="northwind")
allT <- dbListTables(here)
View(allT)
length(allT)
allT[1:7]
dbGetQuery(allT,"select * from Categories")
dbGetQuery(allT,"select count(*) from Categories")
dbGetQuery(allT,"select count(*) from Employees")
dbReadTable(allT,"Employees")
dbGetQuery(allT,"select * from Employees")
here <- dbConnect(MySQL(),user="sqlrpt",password="uciusf",host="127.0.0.1", dbname="northwind")
dbGetQuery(here,"select * from Employees")
dbGetQuery(here,"select count(*) from Employees")
source(http://bioconductor.org/biocLite.R)
source("http://bioconductor.org/biocLite.R)
""
;
>
}
)
q
quit
.
exit
}
}
{}
s
q
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
library(rhdf5)
created=h5createGroup(example.h5, "foo")
con = url(http://biostat.jhsph.edu/~jleek/contact.html)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readlines(con)
htmlCode = readLines(con)
head(htmlCode)
htmlCode
htmlCode[1]
htmlCode[10]
nchar(htmlCode[10,20])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
install.packages("dyn")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
View(mtcars)
dcast()
install.packages("dplyr")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
rm(list=ls())
swirl()
`2014.07.08` <- read.csv("~/Documents/workspace/swirl_courses/Getting_and_Cleaning_Data/Manipulating_Data_with_dplyr/2014-07-08.csv")
View(`2014.07.08`)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr)
""
)
;
}
}
exit
quit
?
)
")"
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
"-5:20"
-(5:20)
select(cran, -(5:20))
select(cran, -(X:20))
info()
select(cran, -(5:20))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1,", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version >= "3.0.2", country %in% "IN")
filter(cran, r_version <= "3.0.2", country %in% "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US"| country == "IN")
filter(cran, country == "US"| country == "IN", r_os == "linux-gnu")
filter(cran, size >100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
filter(cran, size >100500, r_os == "linux-gnu", !is.na(r_version))
filter(cran, size >100500, r_os == "linux-gnu", !is.na(r_version))
filter(cran,  !is.na(r_version))
!is.na(c(3,5,NA,10))
filter(cran, size >100500, r_os == "linux-gnu", !is.na(r_version))
filter(cran,  !is.na(r_version))
arrange()
arrange(cran)
cran2 <- arrange(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, desc(country))
arrange(cran2, country, desc(r_version),ip_id)
select(cran, ip_id,package,size)
cran3 <- select(cran, ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
cran3
mutate(cran3, correct_size = size + 1000)
summarize()
summarize(cran, avg_bytes = mean(size))
`getdata%2Fdata%2Fss06hid` <- read.csv("/var/folders/j5/c2scdb0d005cm7s62gj40mk80000gn/T//RtmphXyTXa/data149f26ec772d")
View(`getdata%2Fdata%2Fss06hid`)
getTest < - table(getdata%2Fdata%2Fss06hid)
getTest < - table("getdata%2Fdata%2Fss06hid"")
)
}
x
.
/
/
?
getTest <- View('getdata%2Fdata%2Fss06hid')
getTest <- table('getdata%2Fdata%2Fss06hid')
View(getTest)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
rm(list=ls())
swirl()
library(tidyr)
View(students)
students
gather()
gather(students)
?gather()
?gather
gather(students, sex,count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into=c("sex", "class") )
submit()
students3
View(students3)
submit()
?spread
submit()
extract_numeric("class5")
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
?unique
submit()
submit()
passed
failed
failed
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
packageVersion('dyplr')
packageVersion('dplyr')
bind_rows()
bind_rows(passed,failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
swirl(0)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd(my_date)
my_date <- ymd("1989 May 17")
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
ymd("25081985")
dmy("25081985")
dmy(25081985)
ymd("191012")
ymd("192012")
ymd("1920120")
ymd("1920/1/2')
)
''
}
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms()
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hourse=8, minutes= 34, seconds= 55)
this_moment <- update(this_moment, hourse=8, minutes= 34, seconds= 55)
this_moment <- update(this_moment, hours =8, minutes= 34, seconds= 55)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds= 55)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
now()?now
?now
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
deaprt <- nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
with_tz(arrive)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
with_tz(arrive, tzone ="Asia/Hong_Kong")
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- with_tz(mdy("june 17, 2008"), tzone = "Singapore")
last_time <- with_tz(mdy("june 17, 2008"), tz = "Singapore")
last_time <- (mdy("june 17, 2008"), tz = "Singapore")
last_time <- (mdy("June 17, 2008"), tz = "Singapore")
last_time <- with_tz(mdy("June 17, 2008"), tz = "Singapore")
last_time <- mdy("June 17, 2008"), tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
`getdata%2Fdata%2Fss06hid` <- read.csv("/var/folders/j5/c2scdb0d005cm7s62gj40mk80000gn/T//Rtmp4rWqI4/data33fb1b7aa12e")
View(`getdata%2Fdata%2Fss06hid`)
?strsplit
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages(c("curl", "httr", "kernlab", "knitr", "memoise", "mgcv", "nlme", "R6", "RMySQL", "rstudioapi"))
install.packages(c("curl", "httr", "kernlab", "knitr", "memoise",
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
View(sampleTimes)
mdy(sampleTimes)
View(sampleTimes)
sampleTimes
year(sampleTimes)
grepl(year(sampleTimes))
summary(year(sampleTimes))
table(year(sampleTimes))
?strsplit
`getdata%2Fdata%2FGDP` <- read.csv("/var/folders/j5/c2scdb0d005cm7s62gj40mk80000gn/T//RtmpR6RWkG/data34c676754b17")
View(`getdata%2Fdata%2FGDP`)
summary(`getdata%2Fdata%2FGDP`)
summary(getdata%2Fdata%2FGDP$X.3)
GDP <-View(`getdata%2Fdata%2FGDP`)
summary(GDP$X.3)
summary(GDP$X.3,na.rm=TRUE)
GDP$X.3
table(GDP$X.3)
fivenum(GDP$X.3)
grep
?grep
nombre <- getdata%2Fdata%2FGDP$X.2
getdata%2Fdata%2FGDP$X.2
GDP$X.2
table(GDP$X.2)
nombre <- table(GDP$X.2)
nombre
install.packages(c("curl", "httr", "kernlab", "knitr", "memoise", "mgcv", "nlme", "R6", "RMySQL", "rstudioapi"))
install.packages(c("curl", "httr", "kernlab", "knitr", "memoise",
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
rm(list=ls())
swirl()
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
fivenum(pollution$pm25)
summary(pollution$pm25)
ppm
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col="blue")
abline(ppm, h=12)
abline(ppm, h="12")
abline()
abline(h=12)
hist(ppm)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
table(pollution$region)
reg <-table(pollution$region)
reg
barplot(reg)
barplot(reg, col="wheat", main= "Number of Counties in Each Region")
boxplot(pm25~region)
boxplot(pm25~region, col="red")
boxplot(pollution$pm25~pollution$region, col="red")
boxplot(pm25 ~ region, data=pollutiion, col="red")
boxplot(pm25 ~ region, data = pollutiion, col="red")
boxplot(pm25 ~ region, data = pollutiion, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
subset(pollution)
subset(pollution, region=="east")
east <- subset(pollution, region=="east")
head(east)
hist()
hist(east, col="green")
hist(pm25, col="green")
hist(, col="green")
hist(pollution$pm25, col="green")
hist(east$pm25, col="green")
hist(subset(pollution, region=="west"))
hist(subset(pm25, region=="west"))
hist(subset(pollution$pm25, region=="west"))
hist(subset(pollution$pm25, pollution$region=="west"))
hist(subset(pollution, region=="west")$pm25, col="green")
plot(pollution$pm25)
with(pollution,plot(latitude, pm25))
abline(h=12,lwd=2, lty=2)
plot(pollution$latitude, pollution$ppm, col="pollution$region" )
plot(pollution$latitude, pollution$ppm, col=pollution$region )
plot(pollution$latitude, ppm, col=pollution$region )
abline(h=12)
abline(h=12,lwd=2, lty=2)
par(mfrow=c(1,2), mar = c(5,4,2,1))
west <-subset(pollution, region=="west"))
west <-subset(pollution, region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
library(swirl)
swirl()
setwd("~/Documents/workspace/PlottingData")
library(datasets)
data(cars)
with(cars, plot(speed, dist))
?par
quartz()
